
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASTERISCO DO ENDDO ENDWHILE IDENTIFICADOR IGUAL IGUAL_IGUAL INT MAS NUMERO PARENTESIS_DER PARENTESIS_IZQ PUNTOYCOMA WHILEprograma : declaraciones DO instrucciones ENDDO WHILE PARENTESIS_IZQ condicion PARENTESIS_DER ENDWHILEdeclaraciones : declaracion\n                     | declaracion declaracionesdeclaracion : tipo IDENTIFICADOR IGUAL NUMERO PUNTOYCOMAinstrucciones : instruccion\n                     | instruccion instruccionesinstruccion : IDENTIFICADOR IGUAL expresion PUNTOYCOMAexpresion : termino\n                 | termino MAS expresiontermino : factor\n               | factor ASTERISCO terminofactor : NUMERO\n              | IDENTIFICADORcondicion : tipo IDENTIFICADOR IGUAL_IGUAL NUMEROtipo : INT'
    
_lr_action_items = {'INT':([0,3,23,24,],[5,5,-4,5,]),'$end':([1,34,],[0,-1,]),'DO':([2,3,7,23,],[6,-2,-3,-4,]),'IDENTIFICADOR':([4,5,6,10,15,25,26,27,29,],[8,-15,11,11,18,-7,18,18,33,]),'IGUAL':([8,11,],[12,15,]),'ENDDO':([9,10,14,25,],[13,-5,-6,-7,]),'NUMERO':([12,15,26,27,35,],[16,22,22,22,36,]),'WHILE':([13,],[17,]),'PUNTOYCOMA':([16,18,19,20,21,22,30,31,],[23,-13,25,-8,-10,-12,-9,-11,]),'PARENTESIS_IZQ':([17,],[24,]),'ASTERISCO':([18,21,22,],[-13,27,-12,]),'MAS':([18,20,21,22,31,],[-13,26,-10,-12,-11,]),'PARENTESIS_DER':([28,36,],[32,-14,]),'ENDWHILE':([32,],[34,]),'IGUAL_IGUAL':([33,],[35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaraciones':([0,3,],[2,7,]),'declaracion':([0,3,],[3,3,]),'tipo':([0,3,24,],[4,4,29,]),'instrucciones':([6,10,],[9,14,]),'instruccion':([6,10,],[10,10,]),'expresion':([15,26,],[19,30,]),'termino':([15,26,27,],[20,20,31,]),'factor':([15,26,27,],[21,21,21,]),'condicion':([24,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaraciones DO instrucciones ENDDO WHILE PARENTESIS_IZQ condicion PARENTESIS_DER ENDWHILE','programa',9,'p_programa','analizadorSemantico.py',8),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','analizadorSemantico.py',12),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','analizadorSemantico.py',13),
  ('declaracion -> tipo IDENTIFICADOR IGUAL NUMERO PUNTOYCOMA','declaracion',5,'p_declaracion','analizadorSemantico.py',17),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','analizadorSemantico.py',22),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones','analizadorSemantico.py',23),
  ('instruccion -> IDENTIFICADOR IGUAL expresion PUNTOYCOMA','instruccion',4,'p_instruccion','analizadorSemantico.py',27),
  ('expresion -> termino','expresion',1,'p_expresion','analizadorSemantico.py',33),
  ('expresion -> termino MAS expresion','expresion',3,'p_expresion','analizadorSemantico.py',34),
  ('termino -> factor','termino',1,'p_termino','analizadorSemantico.py',38),
  ('termino -> factor ASTERISCO termino','termino',3,'p_termino','analizadorSemantico.py',39),
  ('factor -> NUMERO','factor',1,'p_factor','analizadorSemantico.py',43),
  ('factor -> IDENTIFICADOR','factor',1,'p_factor','analizadorSemantico.py',44),
  ('condicion -> tipo IDENTIFICADOR IGUAL_IGUAL NUMERO','condicion',4,'p_condicion','analizadorSemantico.py',50),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSemantico.py',58),
]
